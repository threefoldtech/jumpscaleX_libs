@url = tfgrid.workloads.reservation.gateway.proxy.1
domain = (S)
addr = (S) # destination address
port = (I) # 
port_tls = (I)
## common fields
pool_id = (I)
description = "" (S)
#id of threebot which pays for it
customer_tid = (I)
#signature with private key of customer of the json, this guarantees that the data did not change
customer_signature = (S)
#state, allows anyone to see what can happen next e.g. sign means waiting for everyone to sign
#delete means its deployed now we need to wait till enough people sign to delete
next_action = "create,sign,pay,deploy,delete,invalid,deleted" (E)
signatures_provision = (LO) !tfgrid.workloads.reservation.signing.signature.1
#need toget to consensus
signing_request_provision = (O) !tfgrid.workloads.reservation.signing.request.1
signing_request_delete = (O) !tfgrid.workloads.reservation.signing.request.1
signatures_farmer = (LO) !tfgrid.workloads.reservation.signing.signature.1
signatures_delete = (LO) !tfgrid.workloads.reservation.signing.signature.1
epoch = (T)
metadata = (S)
results = (LO) !tfgrid.workloads.reservation.result.1
workload_type = "zdb,container,volume,network,kubernetes,proxy,reverse-proxy,subdomain,domain-delegate,gateway4to6,network_resource" (E)

@url = tfgrid.workloads.reservation.gateway.reverse_proxy.1
domain = (S)
secret = (S) # the secret used by tcp router client. format must be 'threebotid:random_secret'
info = (O) !tfgrid.workloads.reservation.info.1

@url = tfgrid.workloads.reservation.gateway.subdomain.1
domain = (S) # full domain. e.g: `user1.tfgw1.io`
ips = (LS) # list of target IP
info = (O) !tfgrid.workloads.reservation.info.1

@url = tfgrid.workloads.reservation.gateway.delegate.1
domain = (S)
info = (O) !tfgrid.workloads.reservation.info.1

@url = tfgrid.workloads.reservation.gateway4to6.1
public_key = (S) the wireguard public key of the user
info = (O) !tfgrid.workloads.reservation.info.1
